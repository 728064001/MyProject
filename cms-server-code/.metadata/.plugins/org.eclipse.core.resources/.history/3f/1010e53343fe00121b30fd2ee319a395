package com.haolei.tools;

import com.haolei.dao.Dbconn;

public class IdValueTwoQuery {
	/*
	 * 这个类中有两个方法
	 * 方法一：
	 * 		根据名称查id
	 * 
	 * 
	 * 方法二：
	 * 		根据id查名称
	 * 
	 * 表：company_tab,dep_tab,post_tab
	 * 
	 */
	public int valueQueryId(String tabName){
		//1.根据Company对象的CompanyName值，在Company_tab中查对应的ID
		String queryCompanyidStr = "select id from Company_tab where companyname = ?";
		int companyid=0;
		try{
			pstm = conn.prepareStatement(queryCompanyidStr);
			pstm.setString(1, company.getCompanyName());
			res = pstm.executeQuery();
			while(res.next()){
				companyid = res.getInt(1);
			}
		}catch(Exception e){
			e.printStackTrace();
			return false;
		}finally{
			Dbconn.closeALL(conn, pstm, res);
		}
		
		//根据Dep对象的dep值，在dep_tab中查询对应id
		String queryDepidStr = "select id from dep_tab where dep = ?";
		int depid=0;
		try{
			pstm = conn.prepareStatement(queryDepidStr);
			pstm.setString(1, dep.getDep());
			res = pstm.executeQuery();
			while(res.next()){
				depid = res.getInt(1);
			}
		}catch(Exception e){
			e.printStackTrace();
			return false;
		}finally{
			Dbconn.closeALL(conn, pstm, res);
		}
		
		//根据Post对象的post值，在post_tab中查询对应的ID
		String querypostidStr = "select id from post_tab where post = ?";
		int postid=0;
		try{
			pstm = conn.prepareStatement(querypostidStr);
			pstm.setString(1, post.getPost());
			res = pstm.executeQuery();
			while(res.next()){
				postid = res.getInt(1);
			}
		}catch(Exception e){
			e.printStackTrace();
			return false;
		}finally{
			Dbconn.closeALL(conn, pstm, res);
		}
	}
}
